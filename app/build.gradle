plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'org.jetbrains.kotlin.android.extensions'
    id 'androidx.navigation.safeargs.kotlin'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def secretPropertiesFile = rootProject.file("secret.properties")
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretPropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.medina.juanantonio.watcher"
        minSdk 21
        targetSdk 32
        versionCode 7
        versionName "1.5"
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            buildConfigField "String", "PRIVATE_KEY", "\"${secretProperties['privateKey']}\""
            buildConfigField "String", "APP_ID", "\"${secretProperties['appId']}\""

            resValue "string", "app_name_version", "Watcher TV v${variant.versionName}"

            outputFileName = "Watcher TV v${variant.versionName} ${variant.name.capitalize()}.apk"
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'

    def leanback_version = "1.2.0-alpha02"
    implementation "androidx.leanback:leanback:$leanback_version"

    // Kotlin KTX
    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    // Navigation Component
    def nav_version = '2.5.2'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Exoplayer for playback
    def exoplayer_version = "2.18.1"
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
    implementation "com.google.android.exoplayer:extension-leanback:$exoplayer_version"
    implementation "com.google.android.exoplayer:extension-mediasession:$exoplayer_version"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayer_version"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.9'

    // Google Room
    def roomVersion = '2.4.3'
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Dagger
    def daggerVersion = '2.41'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Hilt
    def hiltVersion = '2.41'
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Retrofit
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'

    // Glide Image Loading
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    // Glide Transformations
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'

    // KPermissions
    implementation 'com.github.fondesa:kpermissions:3.3.0'

    // JWT
    api 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.5') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }

    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
}