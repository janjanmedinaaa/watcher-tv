name: Deploy to Github Release

on:
  pull_request:
    types:
      - closed
    branches:
      - 'testBranch'

jobs:
  verifyBranch:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Preparing to Build Release"

  buildAPK:
    needs: [ verifyBranch ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Create properties files
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > keystore.properties
          echo "${{ secrets.SECRET }}" | base64 --decode > secret.properties

      - name: Create temporary keystore file
        run: |
          echo "${{ secrets.WATCHER_JKS }}" | base64 --decode > ./app/watcher-keystore.jks

      - name: Build Release
        run: |
          ./gradlew --no-daemon --stacktrace assembleRelease
          echo "APK_LOCATION=$(find app -type f -name '*.apk')" >> $GITHUB_ENV

      # It splits the apkLocation by '/' and gets the last item, usually the APK filename.
      # Then it removes the 'Release.apk' suffix and splits the string using the 'v' as delimeter
      - name: Store Tag Name
        run: |
          apkLocation="${{ env.APK_LOCATION }}"
          filename=${apkLocation##*/}
          echo "TAG_NAME=$(cut -d "v" -f2 <<< "${filename%Release.apk*}")" >> $GITHUB_ENV

      - name: Create Release
        if: env.APK_LOCATION != ''
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ env.APK_LOCATION }}
          tag: ${{ env.TAG_NAME }}
          token: ${{ secrets.PAT }}
          prerelease: true